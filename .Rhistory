(birdStrikesDF)
birdStrikesDF <- birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator != "MILITARY",]
birdStrikesDF
unique(birdStrikesDF$Aircraft..Airline.Operator)
dbWriteTable(
con,
name="birdStrikeRaw",
value=birdStrikesDF,
row.names = FALSE,
overwrite = TRUE,
temporary = FALSE
)
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(*) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
plotGrapph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph()
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph()
plotGraph()
dbDisconnect(con)
install.packages("RMariaDB")
install.packages("anytime")
install.packages("tidyverse")
install.packages("dbplyr")
install.packages("RMariaDB")
install.packages("anytime")
install.packages("tidyverse")
install.packages("dbplyr")
install.packages("dbplyr")
install.packages("dbplyr")
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'bird_strike'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
dbDisconnect(con)
dbDisconnect(con)
install.packages("RMariaDB")
install.packages("anytime")
install.packages("tidyverse")
install.packages("dbplyr")
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'bird_strike'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight == "Landing Roll"] <- "landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Approach"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Climb"]<-"inflight"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Descent"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Take-off run"]<-"takeoff"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Parked"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Taxi"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight==""]<-"unknown"
unique(birdStrikesDF$When..Phase.of.flight)
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$FlightDate <- as.character(map(strsplit(birdStrikesDF$FlightDate, split = " "), 1))
head(birdStrikesDF$FlightDate)
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
head(birdStrikesDF$FlightDate)
typeof(birdStrikesDF$FlightDate)
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
install.packages("RMariaDB")
install.packages("anytime")
install.packages("tidyverse")
install.packages("dbplyr")
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight == "Landing Roll"] <- "landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Approach"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Climb"]<-"inflight"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Descent"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Take-off run"]<-"takeoff"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Parked"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Taxi"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight==""]<-"unknown"
unique(birdStrikesDF$When..Phase.of.flight)
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$FlightDate <- as.character(map(strsplit(birdStrikesDF$FlightDate, split = " "), 1))
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
birdStrikesDF <- birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator != "MILITARY",]
birdStrikesDF
unique(birdStrikesDF$Aircraft..Airline.Operator)
dbWriteTable(
con,
name="birdStrikeRaw",
value=birdStrikesDF,
row.names = FALSE,
overwrite = TRUE,
temporary = FALSE
)
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph()
dbDisconnect(con)
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight == "Landing Roll"] <- "landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Approach"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Climb"]<-"inflight"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Descent"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Take-off run"]<-"takeoff"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Parked"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Taxi"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight==""]<-"unknown"
unique(birdStrikesDF$When..Phase.of.flight)
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$FlightDate <- as.character(map(strsplit(birdStrikesDF$FlightDate, split = " "), 1))
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
head(birdStrikesDF)
birdStrikesDF <- birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator != "MILITARY",]
head(birdStrikesDFbirdStrikesDF$[Aircraft..Airline.Operator] == "MILITARY")
head(birdStrikes[DFbirdStrikesDF$Aircraft..Airline.Operator] == "MILITARY")
head(birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator] == "MILITARY")
head(birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
militaryFlights
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
length(militaryFlights)
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
length(militaryFlights)
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
length(militaryFlights)
dbWriteTable(
con,
name="birdStrikeRaw",
value=birdStrikesDF,
row.names = FALSE,
overwrite = TRUE,
temporary = FALSE
)
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
dbDisconnect(con)
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight == "Landing Roll"] <- "landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Approach"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Climb"]<-"inflight"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Descent"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Take-off run"]<-"takeoff"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Parked"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Taxi"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight==""]<-"unknown"
unique(birdStrikesDF$When..Phase.of.flight)
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$FlightDate <- as.character(map(strsplit(birdStrikesDF$FlightDate, split = " "), 1))
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
birdStrikesDF <- birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator != "MILITARY",]
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
length(militaryFlights)
dbWriteTable(
con,
name="birdStrikeRaw",
value=birdStrikesDF,
row.names = FALSE,
overwrite = TRUE,
temporary = FALSE
)
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph()
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph()
plotGraph()
dbDisconnect(con)
dbDisconnect(con)
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight == "Landing Roll"] <- "landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Approach"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Climb"]<-"inflight"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Descent"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Take-off run"]<-"takeoff"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Parked"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Taxi"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight==""]<-"unknown"
unique(birdStrikesDF$When..Phase.of.flight)
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$FlightDate <- as.character(map(strsplit(birdStrikesDF$FlightDate, split = " "), 1))
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
birdStrikesDF <- birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator != "MILITARY",]
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
length(militaryFlights)
dbWriteTable(
con,
name="birdStrikeRaw",
value=birdStrikesDF,
row.names = FALSE,
overwrite = TRUE,
temporary = FALSE
)
dbDisconnect(con)
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight == "Landing Roll"] <- "landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Approach"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Climb"]<-"inflight"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Descent"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Take-off run"]<-"takeoff"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Parked"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Taxi"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight==""]<-"unknown"
unique(birdStrikesDF$When..Phase.of.flight)
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$FlightDate <- as.character(map(strsplit(birdStrikesDF$FlightDate, split = " "), 1))
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
birdStrikesDF <- birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator != "MILITARY",]
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
length(militaryFlights)
dbWriteTable(
con,
name="birdStrikeRaw",
value=birdStrikesDF,
row.names = FALSE,
overwrite = TRUE,
temporary = FALSE
)
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph()
dbDisconnect(con)
dbDisconnect(con)
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight == "Landing Roll"] <- "landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Approach"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Climb"]<-"inflight"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Descent"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Take-off run"]<-"takeoff"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Parked"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Taxi"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight==""]<-"unknown"
unique(birdStrikesDF$When..Phase.of.flight)
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$FlightDate <- as.character(map(strsplit(birdStrikesDF$FlightDate, split = " "), 1))
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
birdStrikesDF <- birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator != "MILITARY",]
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
length(militaryFlights)
dbWriteTable(
con,
name="birdStrikeRaw",
value=birdStrikesDF,
row.names = FALSE,
overwrite = TRUE,
temporary = FALSE
)
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph()
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
dbDisconnect(con)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
library(RMariaDB)
library(anytime)
library(tidyverse)
library(dbplyr)
db_user <- 'root'
db_password <- 'Pooj@180598'
db_name <- 'birdStrikes'
db_host <- 'localhost'
db_port <- 3306
con <- dbConnect(RMariaDB::MariaDB(), user=db_user, password=db_password, dbname=db_name, host=db_host)
dbListTables(con)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF <- read.csv("BirdStrikesData.csv",header = TRUE, stringsAsFactors = FALSE);
head(birdStrikesDF)
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight == "Landing Roll"] <- "landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Approach"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Climb"]<-"inflight"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Descent"]<-"landing"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Take-off run"]<-"takeoff"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Parked"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight=="Taxi"]<-"unknown"
birdStrikesDF$When..Phase.of.flight[birdStrikesDF$When..Phase.of.flight==""]<-"unknown"
unique(birdStrikesDF$When..Phase.of.flight)
birdStrikesDF$Airport..Name[birdStrikesDF$Airport..Name==""]<-"unknown"
birdStrikesDF$Aircraft..Airline.Operator[birdStrikesDF$Aircraft..Airline.Operator==""]<-"unknown"
birdStrikesDF$FlightDate <- as.character(map(strsplit(birdStrikesDF$FlightDate, split = " "), 1))
birdStrikesDF$FlightDate <- as.Date(birdStrikesDF$FlightDate,"%m/%d/%Y")
birdStrikesDF <- birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator != "MILITARY",]
militaryFlights <- (birdStrikesDF[birdStrikesDF$Aircraft..Airline.Operator == "MILITARY"])
length(militaryFlights)
dbWriteTable(
con,
name="birdStrikeRaw",
value=birdStrikesDF,
row.names = FALSE,
overwrite = TRUE,
temporary = FALSE
)
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
question7 = dbGetQuery(con,
"select YEAR(`date`) as `Year`,count(iid) as `Count of Incidents`
from incidents where YEAR(`date`)>= 2005 and YEAR(`date`)<= 2011
group by YEAR(`date`)
order by YEAR(`date`)")
question7
plotGraph<-function(){
x<-question7$`Year`; y=question7$`Number of Incidents`
plot(x, y, type="b", xlab="Year", ylab="Number of Incidents",main = "Incidents Statistics from year 2005 to 2011")
}
plotGraph()
